//
// Generated By:JAX-WS RI IBM 2.2.1-11/30/2010 12:42 PM(foreman)- (JAXB RI IBM 2.2.3-11/28/2011 06:21 AM(foreman)-)
//


package com.ibm.itim.ws.services;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import com.ibm.itim.ws.model.WSAccount;
import com.ibm.itim.ws.model.WSAttribute;
import com.ibm.itim.ws.model.WSRequest;
import com.ibm.itim.ws.model.WSSearchArguments;
import com.ibm.itim.ws.model.WSSession;

@WebService(name = "WSAccountService", targetNamespace = "http://services.ws.itim.ibm.com")
public interface WSAccountService {


    /**
     * 
     * @param wsAccounts
     * @param session
     * @param personDN
     * @throws WSLoginServiceException
     * @throws WSApplicationException
     */
    @WebMethod
    @RequestWrapper(localName = "adoptAccounts", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.AdoptAccounts")
    @ResponseWrapper(localName = "adoptAccountsResponse", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.AdoptAccountsResponse")
    public void adoptAccounts(
        @WebParam(name = "session", targetNamespace = "http://services.ws.itim.ibm.com")
        WSSession session,
        @WebParam(name = "personDN", targetNamespace = "http://services.ws.itim.ibm.com")
        String personDN,
        @WebParam(name = "wsAccounts", targetNamespace = "http://services.ws.itim.ibm.com")
        List<WSAccount> wsAccounts)
        throws WSApplicationException, WSLoginServiceException
    ;

    /**
     * 
     * @param session
     * @param accountDN
     * @param ownerDN
     * @throws WSLoginServiceException
     * @throws WSApplicationException
     */
    @WebMethod
    @RequestWrapper(localName = "adoptSingleAccount", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.AdoptSingleAccount")
    @ResponseWrapper(localName = "adoptSingleAccountResponse", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.AdoptSingleAccountResponse")
    public void adoptSingleAccount(
        @WebParam(name = "session", targetNamespace = "http://services.ws.itim.ibm.com")
        WSSession session,
        @WebParam(name = "accountDN", targetNamespace = "http://services.ws.itim.ibm.com")
        String accountDN,
        @WebParam(name = "ownerDN", targetNamespace = "http://services.ws.itim.ibm.com")
        String ownerDN)
        throws WSApplicationException, WSLoginServiceException
    ;

    /**
     * 
     * @param wsAttrs
     * @param session
     * @param date
     * @param serviceDN
     * @return
     *     returns com.ibm.itim.ws.model.WSRequest
     * @throws WSLoginServiceException
     * @throws WSApplicationException
     */
    @WebMethod
    @WebResult(name = "createAccountReturn", targetNamespace = "http://services.ws.itim.ibm.com")
    @RequestWrapper(localName = "createAccount", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.CreateAccount")
    @ResponseWrapper(localName = "createAccountResponse", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.CreateAccountResponse")
    public WSRequest createAccount(
        @WebParam(name = "session", targetNamespace = "http://services.ws.itim.ibm.com")
        WSSession session,
        @WebParam(name = "serviceDN", targetNamespace = "http://services.ws.itim.ibm.com")
        String serviceDN,
        @WebParam(name = "wsAttrs", targetNamespace = "http://services.ws.itim.ibm.com")
        List<WSAttribute> wsAttrs,
        @WebParam(name = "date", targetNamespace = "http://services.ws.itim.ibm.com")
        XMLGregorianCalendar date)
        throws WSApplicationException, WSLoginServiceException
    ;

    /**
     * 
     * @param session
     * @param accountDN
     * @param date
     * @return
     *     returns com.ibm.itim.ws.model.WSRequest
     * @throws WSLoginServiceException
     * @throws WSApplicationException
     */
    @WebMethod
    @WebResult(name = "deprovisionAccountReturn", targetNamespace = "http://services.ws.itim.ibm.com")
    @RequestWrapper(localName = "deprovisionAccount", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.DeprovisionAccount")
    @ResponseWrapper(localName = "deprovisionAccountResponse", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.DeprovisionAccountResponse")
    public WSRequest deprovisionAccount(
        @WebParam(name = "session", targetNamespace = "http://services.ws.itim.ibm.com")
        WSSession session,
        @WebParam(name = "accountDN", targetNamespace = "http://services.ws.itim.ibm.com")
        String accountDN,
        @WebParam(name = "date", targetNamespace = "http://services.ws.itim.ibm.com")
        XMLGregorianCalendar date)
        throws WSApplicationException, WSLoginServiceException
    ;

    /**
     * 
     * @param session
     * @param accountDN
     * @return
     *     returns java.util.List<com.ibm.itim.ws.model.WSAttribute>
     * @throws WSLoginServiceException
     * @throws WSInvalidSessionException
     * @throws WSApplicationException
     */
    @WebMethod
    @WebResult(name = "getAccountAttributesReturn", targetNamespace = "http://services.ws.itim.ibm.com")
    @RequestWrapper(localName = "getAccountAttributes", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.GetAccountAttributes")
    @ResponseWrapper(localName = "getAccountAttributesResponse", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.GetAccountAttributesResponse")
    public List<WSAttribute> getAccountAttributes(
        @WebParam(name = "session", targetNamespace = "http://services.ws.itim.ibm.com")
        WSSession session,
        @WebParam(name = "accountDN", targetNamespace = "http://services.ws.itim.ibm.com")
        String accountDN)
        throws WSApplicationException, WSInvalidSessionException, WSLoginServiceException
    ;

    /**
     * 
     * @param session
     * @param serviceDN
     * @return
     *     returns java.lang.String
     * @throws WSLoginServiceException
     * @throws WSApplicationException
     */
    @WebMethod
    @WebResult(name = "getAccountProfileForServiceReturn", targetNamespace = "http://services.ws.itim.ibm.com")
    @RequestWrapper(localName = "getAccountProfileForService", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.GetAccountProfileForService")
    @ResponseWrapper(localName = "getAccountProfileForServiceResponse", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.GetAccountProfileForServiceResponse")
    public String getAccountProfileForService(
        @WebParam(name = "session", targetNamespace = "http://services.ws.itim.ibm.com")
        WSSession session,
        @WebParam(name = "serviceDN", targetNamespace = "http://services.ws.itim.ibm.com")
        String serviceDN)
        throws WSApplicationException, WSLoginServiceException
    ;

    /**
     * 
     * @param session
     * @param serviceDN
     * @return
     *     returns java.util.List<com.ibm.itim.ws.model.WSAttribute>
     * @throws WSLoginServiceException
     * @throws WSApplicationException
     */
    @WebMethod
    @WebResult(name = "getDefaultAccountAttributesReturn", targetNamespace = "http://services.ws.itim.ibm.com")
    @RequestWrapper(localName = "getDefaultAccountAttributes", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.GetDefaultAccountAttributes")
    @ResponseWrapper(localName = "getDefaultAccountAttributesResponse", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.GetDefaultAccountAttributesResponse")
    public List<WSAttribute> getDefaultAccountAttributes(
        @WebParam(name = "session", targetNamespace = "http://services.ws.itim.ibm.com")
        WSSession session,
        @WebParam(name = "serviceDN", targetNamespace = "http://services.ws.itim.ibm.com")
        String serviceDN)
        throws WSApplicationException, WSLoginServiceException
    ;

    /**
     * 
     * @param session
     * @param personDN
     * @param serviceDN
     * @return
     *     returns java.util.List<com.ibm.itim.ws.model.WSAttribute>
     * @throws WSLoginServiceException
     * @throws WSApplicationException
     */
    @WebMethod
    @WebResult(name = "getDefaultAccountAttributesByPersonReturn", targetNamespace = "http://services.ws.itim.ibm.com")
    @RequestWrapper(localName = "getDefaultAccountAttributesByPerson", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.GetDefaultAccountAttributesByPerson")
    @ResponseWrapper(localName = "getDefaultAccountAttributesByPersonResponse", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.GetDefaultAccountAttributesByPersonResponse")
    public List<WSAttribute> getDefaultAccountAttributesByPerson(
        @WebParam(name = "session", targetNamespace = "http://services.ws.itim.ibm.com")
        WSSession session,
        @WebParam(name = "serviceDN", targetNamespace = "http://services.ws.itim.ibm.com")
        String serviceDN,
        @WebParam(name = "personDN", targetNamespace = "http://services.ws.itim.ibm.com")
        String personDN)
        throws WSApplicationException, WSLoginServiceException
    ;

    /**
     * 
     * @param wsAttrs
     * @param session
     * @param accountDN
     * @param date
     * @return
     *     returns com.ibm.itim.ws.model.WSRequest
     * @throws WSLoginServiceException
     * @throws WSApplicationException
     */
    @WebMethod
    @WebResult(name = "modifyAccountReturn", targetNamespace = "http://services.ws.itim.ibm.com")
    @RequestWrapper(localName = "modifyAccount", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.ModifyAccount")
    @ResponseWrapper(localName = "modifyAccountResponse", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.ModifyAccountResponse")
    public WSRequest modifyAccount(
        @WebParam(name = "session", targetNamespace = "http://services.ws.itim.ibm.com")
        WSSession session,
        @WebParam(name = "accountDN", targetNamespace = "http://services.ws.itim.ibm.com")
        String accountDN,
        @WebParam(name = "wsAttrs", targetNamespace = "http://services.ws.itim.ibm.com")
        List<WSAttribute> wsAttrs,
        @WebParam(name = "date", targetNamespace = "http://services.ws.itim.ibm.com")
        XMLGregorianCalendar date)
        throws WSApplicationException, WSLoginServiceException
    ;

    /**
     * 
     * @param wsAccounts
     * @param systemUserDN
     * @param session
     * @throws WSLoginServiceException
     * @throws WSApplicationException
     */
    @WebMethod
    @RequestWrapper(localName = "orphanAccounts", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.OrphanAccounts")
    @ResponseWrapper(localName = "orphanAccountsResponse", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.OrphanAccountsResponse")
    public void orphanAccounts(
        @WebParam(name = "session", targetNamespace = "http://services.ws.itim.ibm.com")
        WSSession session,
        @WebParam(name = "systemUserDN", targetNamespace = "http://services.ws.itim.ibm.com")
        String systemUserDN,
        @WebParam(name = "wsAccounts", targetNamespace = "http://services.ws.itim.ibm.com")
        List<WSAccount> wsAccounts)
        throws WSApplicationException, WSLoginServiceException
    ;

    /**
     * 
     * @param session
     * @param accountDN
     * @throws WSLoginServiceException
     * @throws WSApplicationException
     */
    @WebMethod
    @RequestWrapper(localName = "orphanSingleAccount", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.OrphanSingleAccount")
    @ResponseWrapper(localName = "orphanSingleAccountResponse", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.OrphanSingleAccountResponse")
    public void orphanSingleAccount(
        @WebParam(name = "session", targetNamespace = "http://services.ws.itim.ibm.com")
        WSSession session,
        @WebParam(name = "accountDN", targetNamespace = "http://services.ws.itim.ibm.com")
        String accountDN)
        throws WSApplicationException, WSLoginServiceException
    ;

    /**
     * 
     * @param session
     * @param accountDN
     * @param newPassword
     * @param date
     * @return
     *     returns com.ibm.itim.ws.model.WSRequest
     * @throws WSLoginServiceException
     * @throws WSApplicationException
     */
    @WebMethod
    @WebResult(name = "restoreAccountReturn", targetNamespace = "http://services.ws.itim.ibm.com")
    @RequestWrapper(localName = "restoreAccount", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.RestoreAccount")
    @ResponseWrapper(localName = "restoreAccountResponse", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.RestoreAccountResponse")
    public WSRequest restoreAccount(
        @WebParam(name = "session", targetNamespace = "http://services.ws.itim.ibm.com")
        WSSession session,
        @WebParam(name = "accountDN", targetNamespace = "http://services.ws.itim.ibm.com")
        String accountDN,
        @WebParam(name = "newPassword", targetNamespace = "http://services.ws.itim.ibm.com")
        String newPassword,
        @WebParam(name = "date", targetNamespace = "http://services.ws.itim.ibm.com")
        XMLGregorianCalendar date)
        throws WSApplicationException, WSLoginServiceException
    ;

    /**
     * 
     * @param searchArgs
     * @param session
     * @return
     *     returns java.util.List<com.ibm.itim.ws.model.WSAccount>
     * @throws WSLoginServiceException
     * @throws WSApplicationException
     */
    @WebMethod
    @WebResult(name = "searchAccountsReturn", targetNamespace = "http://services.ws.itim.ibm.com")
    @RequestWrapper(localName = "searchAccounts", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.SearchAccounts")
    @ResponseWrapper(localName = "searchAccountsResponse", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.SearchAccountsResponse")
    public List<WSAccount> searchAccounts(
        @WebParam(name = "session", targetNamespace = "http://services.ws.itim.ibm.com")
        WSSession session,
        @WebParam(name = "searchArgs", targetNamespace = "http://services.ws.itim.ibm.com")
        WSSearchArguments searchArgs)
        throws WSApplicationException, WSLoginServiceException
    ;

    /**
     * 
     * @param session
     * @param accountDN
     * @param date
     * @return
     *     returns com.ibm.itim.ws.model.WSRequest
     * @throws WSLoginServiceException
     * @throws WSApplicationException
     */
    @WebMethod
    @WebResult(name = "suspendAccountReturn", targetNamespace = "http://services.ws.itim.ibm.com")
    @RequestWrapper(localName = "suspendAccount", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.SuspendAccount")
    @ResponseWrapper(localName = "suspendAccountResponse", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.SuspendAccountResponse")
    public WSRequest suspendAccount(
        @WebParam(name = "session", targetNamespace = "http://services.ws.itim.ibm.com")
        WSSession session,
        @WebParam(name = "accountDN", targetNamespace = "http://services.ws.itim.ibm.com")
        String accountDN,
        @WebParam(name = "date", targetNamespace = "http://services.ws.itim.ibm.com")
        XMLGregorianCalendar date)
        throws WSApplicationException, WSLoginServiceException
    ;

    /**
     * 
     * @param wsAttrs
     * @param session
     * @param accountDN
     * @param date
     * @return
     *     returns com.ibm.itim.ws.model.WSRequest
     */
    @WebMethod
    @WebResult(name = "updateAccountReturn", targetNamespace = "http://services.ws.itim.ibm.com")
    @RequestWrapper(localName = "updateAccount", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.UpdateAccount")
    @ResponseWrapper(localName = "updateAccountResponse", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.UpdateAccountResponse")
    public WSRequest updateAccount(
        @WebParam(name = "session", targetNamespace = "http://services.ws.itim.ibm.com")
        WSSession session,
        @WebParam(name = "accountDN", targetNamespace = "http://services.ws.itim.ibm.com")
        String accountDN,
        @WebParam(name = "wsAttrs", targetNamespace = "http://services.ws.itim.ibm.com")
        List<WSAttribute> wsAttrs,
        @WebParam(name = "date", targetNamespace = "http://services.ws.itim.ibm.com")
        XMLGregorianCalendar date);

}
