//
// Generated By:JAX-WS RI IBM 2.2.1-11/30/2010 12:42 PM(foreman)- (JAXB RI IBM 2.2.3-11/28/2011 06:21 AM(foreman)-)
//


package com.ibm.itim.ws.services;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import com.ibm.itim.ws.model.WSChallengeResponseInfo;
import com.ibm.itim.ws.model.WSLocale;
import com.ibm.itim.ws.model.WSSession;
import com.ibm.itim.ws.model.WSVersionInfo;

@WebService(name = "WSSessionService", targetNamespace = "http://services.ws.itim.ibm.com")
@XmlSeeAlso({
    com.ibm.itim.ws.exceptions.ObjectFactory.class,
    com.ibm.itim.ws.model.ObjectFactory.class,
    com.ibm.itim.ws.services.ObjectFactory.class
})
public interface WSSessionService {


    /**
     * 
     * @param wsLocale
     * @param principle
     * @return
     *     returns java.util.List<java.lang.String>
     * @throws WSApplicationException
     */
    @WebMethod
    @WebResult(name = "getChallengeQuestionsReturn", targetNamespace = "http://services.ws.itim.ibm.com")
    @RequestWrapper(localName = "getChallengeQuestions", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.GetChallengeQuestions")
    @ResponseWrapper(localName = "getChallengeQuestionsResponse", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.GetChallengeQuestionsResponse")
    public List<String> getChallengeQuestions(
        @WebParam(name = "principle", targetNamespace = "http://services.ws.itim.ibm.com")
        String principle,
        @WebParam(name = "wsLocale", targetNamespace = "http://services.ws.itim.ibm.com")
        WSLocale wsLocale)
        throws WSApplicationException
    ;

    /**
     * 
     * @return
     *     returns int
     * @throws WSApplicationException
     */
    @WebMethod
    @WebResult(name = "getItimFixpackLevelReturn", targetNamespace = "http://services.ws.itim.ibm.com")
    @RequestWrapper(localName = "getItimFixpackLevel", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.GetItimFixpackLevel")
    @ResponseWrapper(localName = "getItimFixpackLevelResponse", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.GetItimFixpackLevelResponse")
    public int getItimFixpackLevel()
        throws WSApplicationException
    ;

    /**
     * 
     * @return
     *     returns float
     * @throws WSApplicationException
     */
    @WebMethod
    @WebResult(name = "getItimVersionReturn", targetNamespace = "http://services.ws.itim.ibm.com")
    @RequestWrapper(localName = "getItimVersion", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.GetItimVersion")
    @ResponseWrapper(localName = "getItimVersionResponse", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.GetItimVersionResponse")
    public float getItimVersion()
        throws WSApplicationException
    ;

    /**
     * 
     * @return
     *     returns com.ibm.itim.ws.model.WSVersionInfo
     * @throws WSUnsupportedVersionException
     */
    @WebMethod
    @WebResult(name = "getItimVersionInfoReturn", targetNamespace = "http://services.ws.itim.ibm.com")
    @RequestWrapper(localName = "getItimVersionInfo", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.GetItimVersionInfo")
    @ResponseWrapper(localName = "getItimVersionInfoResponse", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.GetItimVersionInfoResponse")
    public WSVersionInfo getItimVersionInfo()
        throws WSUnsupportedVersionException
    ;

    /**
     * 
     * @return
     *     returns int
     * @throws WSApplicationException
     */
    @WebMethod
    @WebResult(name = "getWebServicesBuildNumberReturn", targetNamespace = "http://services.ws.itim.ibm.com")
    @RequestWrapper(localName = "getWebServicesBuildNumber", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.GetWebServicesBuildNumber")
    @ResponseWrapper(localName = "getWebServicesBuildNumberResponse", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.GetWebServicesBuildNumberResponse")
    public int getWebServicesBuildNumber()
        throws WSApplicationException
    ;

    /**
     * 
     * @return
     *     returns java.lang.String
     * @throws WSApplicationException
     */
    @WebMethod
    @WebResult(name = "getWebServicesTargetTypeReturn", targetNamespace = "http://services.ws.itim.ibm.com")
    @RequestWrapper(localName = "getWebServicesTargetType", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.GetWebServicesTargetType")
    @ResponseWrapper(localName = "getWebServicesTargetTypeResponse", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.GetWebServicesTargetTypeResponse")
    public String getWebServicesTargetType()
        throws WSApplicationException
    ;

    /**
     * 
     * @return
     *     returns float
     * @throws WSApplicationException
     */
    @WebMethod
    @WebResult(name = "getWebServicesVersionReturn", targetNamespace = "http://services.ws.itim.ibm.com")
    @RequestWrapper(localName = "getWebServicesVersion", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.GetWebServicesVersion")
    @ResponseWrapper(localName = "getWebServicesVersionResponse", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.GetWebServicesVersionResponse")
    public float getWebServicesVersion()
        throws WSApplicationException
    ;

    /**
     * 
     * @param session
     * @return
     *     returns boolean
     * @throws WSApplicationException
     * @throws WSInvalidSessionException
     */
    @WebMethod
    @WebResult(name = "isPasswordEditingAllowedReturn", targetNamespace = "http://services.ws.itim.ibm.com")
    @RequestWrapper(localName = "isPasswordEditingAllowed", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.IsPasswordEditingAllowed")
    @ResponseWrapper(localName = "isPasswordEditingAllowedResponse", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.IsPasswordEditingAllowedResponse")
    public boolean isPasswordEditingAllowed(
        @WebParam(name = "session", targetNamespace = "http://services.ws.itim.ibm.com")
        WSSession session)
        throws WSApplicationException, WSInvalidSessionException
    ;

    /**
     * 
     * @param credential
     * @param principal
     * @return
     *     returns com.ibm.itim.ws.model.WSSession
     * @throws WSLoginServiceException
     * @throws WSInvalidLoginException
     */
    @WebMethod
    @WebResult(name = "loginReturn", targetNamespace = "http://services.ws.itim.ibm.com")
    @RequestWrapper(localName = "login", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.Login")
    @ResponseWrapper(localName = "loginResponse", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.LoginResponse")
    public WSSession login(
        @WebParam(name = "principal", targetNamespace = "http://services.ws.itim.ibm.com")
        String principal,
        @WebParam(name = "credential", targetNamespace = "http://services.ws.itim.ibm.com")
        String credential)
        throws WSInvalidLoginException, WSLoginServiceException
    ;

    /**
     * 
     * @param challengeInfo
     * @param wsLocale
     * @param newPassword
     * @param principle
     * @return
     *     returns com.ibm.itim.ws.model.WSSession
     * @throws WSLoginServiceException
     */
    @WebMethod
    @WebResult(name = "lostPasswordLoginDirectEntryReturn", targetNamespace = "http://services.ws.itim.ibm.com")
    @RequestWrapper(localName = "lostPasswordLoginDirectEntry", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.LostPasswordLoginDirectEntry")
    @ResponseWrapper(localName = "lostPasswordLoginDirectEntryResponse", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.LostPasswordLoginDirectEntryResponse")
    public WSSession lostPasswordLoginDirectEntry(
        @WebParam(name = "principle", targetNamespace = "http://services.ws.itim.ibm.com")
        String principle,
        @WebParam(name = "challengeInfo", targetNamespace = "http://services.ws.itim.ibm.com")
        List<WSChallengeResponseInfo> challengeInfo,
        @WebParam(name = "newPassword", targetNamespace = "http://services.ws.itim.ibm.com")
        String newPassword,
        @WebParam(name = "wsLocale", targetNamespace = "http://services.ws.itim.ibm.com")
        WSLocale wsLocale)
        throws WSLoginServiceException
    ;

    /**
     * 
     * @param challengeInfo
     * @param wsLocale
     * @param principle
     * @return
     *     returns java.lang.String
     * @throws WSLoginServiceException
     */
    @WebMethod
    @WebResult(name = "lostPasswordLoginResetPasswordReturn", targetNamespace = "http://services.ws.itim.ibm.com")
    @RequestWrapper(localName = "lostPasswordLoginResetPassword", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.LostPasswordLoginResetPassword")
    @ResponseWrapper(localName = "lostPasswordLoginResetPasswordResponse", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.LostPasswordLoginResetPasswordResponse")
    public String lostPasswordLoginResetPassword(
        @WebParam(name = "principle", targetNamespace = "http://services.ws.itim.ibm.com")
        String principle,
        @WebParam(name = "challengeInfo", targetNamespace = "http://services.ws.itim.ibm.com")
        List<WSChallengeResponseInfo> challengeInfo,
        @WebParam(name = "wsLocale", targetNamespace = "http://services.ws.itim.ibm.com")
        WSLocale wsLocale)
        throws WSLoginServiceException
    ;

    /**
     * 
     * @param session
     * @throws WSLoginServiceException
     */
    @WebMethod
    @RequestWrapper(localName = "logout", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.Logout")
    @ResponseWrapper(localName = "logoutResponse", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.LogoutResponse")
    public void logout(
        @WebParam(name = "session", targetNamespace = "http://services.ws.itim.ibm.com")
        WSSession session)
        throws WSLoginServiceException
    ;

}
