//
// Generated By:JAX-WS RI IBM 2.2.1-11/30/2010 12:42 PM(foreman)- (JAXB RI IBM 2.2.3-11/28/2011 06:21 AM(foreman)-)
//


package com.ibm.itim.ws.services;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;
import com.ibm.itim.ws.model.WSAccount;
import com.ibm.itim.ws.model.WSAttribute;
import com.ibm.itim.ws.model.WSObject;
import com.ibm.itim.ws.model.WSOrganizationalContainer;
import com.ibm.itim.ws.model.WSService;
import com.ibm.itim.ws.model.WSSession;

@WebService(name = "WSServiceService", targetNamespace = "http://services.ws.itim.ibm.com")
public interface WSServiceService {


    /**
     * 
     * @param profileName
     * @param session
     * @param containerDN
     * @param serviceAttributes
     * @return
     *     returns java.lang.String
     * @throws WSApplicationException
     * @throws WSLoginServiceException
     */
    @WebMethod
    @WebResult(name = "createServiceReturn", targetNamespace = "http://services.ws.itim.ibm.com")
    @RequestWrapper(localName = "createService", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.CreateService")
    @ResponseWrapper(localName = "createServiceResponse", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.CreateServiceResponse")
    public String createService(
        @WebParam(name = "session", targetNamespace = "http://services.ws.itim.ibm.com")
        WSSession session,
        @WebParam(name = "containerDN", targetNamespace = "http://services.ws.itim.ibm.com")
        String containerDN,
        @WebParam(name = "profileName", targetNamespace = "http://services.ws.itim.ibm.com")
        String profileName,
        @WebParam(name = "serviceAttributes", targetNamespace = "http://services.ws.itim.ibm.com")
        List<WSAttribute> serviceAttributes)
        throws WSApplicationException, WSLoginServiceException
    ;

    /**
     * 
     * @param session
     * @param accountID
     * @param serviceDN
     * @return
     *     returns java.util.List<com.ibm.itim.ws.model.WSAccount>
     * @throws WSApplicationException
     * @throws WSInvalidSessionException
     */
    @WebMethod
    @WebResult(name = "getAccountsForServiceReturn", targetNamespace = "http://services.ws.itim.ibm.com")
    @RequestWrapper(localName = "getAccountsForService", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.GetAccountsForService")
    @ResponseWrapper(localName = "getAccountsForServiceResponse", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.GetAccountsForServiceResponse")
    public List<WSAccount> getAccountsForService(
        @WebParam(name = "session", targetNamespace = "http://services.ws.itim.ibm.com")
        WSSession session,
        @WebParam(name = "serviceDN", targetNamespace = "http://services.ws.itim.ibm.com")
        String serviceDN,
        @WebParam(name = "accountID", targetNamespace = "http://services.ws.itim.ibm.com")
        String accountID)
        throws WSApplicationException, WSInvalidSessionException
    ;

    /**
     * 
     * @param session
     * @param accountDN
     * @return
     *     returns com.ibm.itim.ws.model.WSService
     * @throws WSApplicationException
     * @throws WSLoginServiceException
     */
    @WebMethod
    @WebResult(name = "getServiceForAccountReturn", targetNamespace = "http://services.ws.itim.ibm.com")
    @RequestWrapper(localName = "getServiceForAccount", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.GetServiceForAccount")
    @ResponseWrapper(localName = "getServiceForAccountResponse", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.GetServiceForAccountResponse")
    public WSService getServiceForAccount(
        @WebParam(name = "session", targetNamespace = "http://services.ws.itim.ibm.com")
        WSSession session,
        @WebParam(name = "accountDN", targetNamespace = "http://services.ws.itim.ibm.com")
        String accountDN)
        throws WSApplicationException, WSLoginServiceException
    ;

    /**
     * 
     * @param session
     * @return
     *     returns java.util.List<com.ibm.itim.ws.model.WSService>
     * @throws WSApplicationException
     * @throws WSLoginServiceException
     */
    @WebMethod
    @WebResult(name = "getServicesReturn", targetNamespace = "http://services.ws.itim.ibm.com")
    @RequestWrapper(localName = "getServices", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.GetServices")
    @ResponseWrapper(localName = "getServicesResponse", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.GetServicesResponse")
    public List<WSService> getServices(
        @WebParam(name = "session", targetNamespace = "http://services.ws.itim.ibm.com")
        WSSession session)
        throws WSApplicationException, WSLoginServiceException
    ;

    /**
     * 
     * @param searchFilter
     * @param attrs
     * @param session
     * @param serviceDN
     * @return
     *     returns java.util.List<com.ibm.itim.ws.model.WSObject>
     * @throws WSApplicationException
     */
    @WebMethod
    @WebResult(name = "getSupportingDataReturn", targetNamespace = "http://services.ws.itim.ibm.com")
    @RequestWrapper(localName = "getSupportingData", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.GetSupportingData")
    @ResponseWrapper(localName = "getSupportingDataResponse", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.GetSupportingDataResponse")
    public List<WSObject> getSupportingData(
        @WebParam(name = "session", targetNamespace = "http://services.ws.itim.ibm.com")
        WSSession session,
        @WebParam(name = "serviceDN", targetNamespace = "http://services.ws.itim.ibm.com")
        String serviceDN,
        @WebParam(name = "searchFilter", targetNamespace = "http://services.ws.itim.ibm.com")
        String searchFilter,
        @WebParam(name = "attrs", targetNamespace = "http://services.ws.itim.ibm.com")
        List<WSAttribute> attrs)
        throws WSApplicationException
    ;

    /**
     * 
     * @param searchFilter
     * @param session
     * @param serviceDN
     * @return
     *     returns java.util.List<com.ibm.itim.ws.model.WSObject>
     * @throws WSApplicationException
     */
    @WebMethod
    @WebResult(name = "getSupportingDataEntriesReturn", targetNamespace = "http://services.ws.itim.ibm.com")
    @RequestWrapper(localName = "getSupportingDataEntries", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.GetSupportingDataEntries")
    @ResponseWrapper(localName = "getSupportingDataEntriesResponse", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.GetSupportingDataEntriesResponse")
    public List<WSObject> getSupportingDataEntries(
        @WebParam(name = "session", targetNamespace = "http://services.ws.itim.ibm.com")
        WSSession session,
        @WebParam(name = "serviceDN", targetNamespace = "http://services.ws.itim.ibm.com")
        String serviceDN,
        @WebParam(name = "searchFilter", targetNamespace = "http://services.ws.itim.ibm.com")
        String searchFilter)
        throws WSApplicationException
    ;

    /**
     * 
     * @param session
     * @param serviceDN
     * @return
     *     returns boolean
     * @throws WSApplicationException
     * @throws WSLoginServiceException
     */
    @WebMethod
    @WebResult(name = "isPasswordRequiredReturn", targetNamespace = "http://services.ws.itim.ibm.com")
    @RequestWrapper(localName = "isPasswordRequired", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.IsPasswordRequired")
    @ResponseWrapper(localName = "isPasswordRequiredResponse", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.IsPasswordRequiredResponse")
    public boolean isPasswordRequired(
        @WebParam(name = "session", targetNamespace = "http://services.ws.itim.ibm.com")
        WSSession session,
        @WebParam(name = "serviceDN", targetNamespace = "http://services.ws.itim.ibm.com")
        String serviceDN)
        throws WSApplicationException, WSLoginServiceException
    ;

    /**
     * 
     * @param session
     * @param serviceDN
     * @return
     *     returns com.ibm.itim.ws.model.WSService
     * @throws WSApplicationException
     * @throws WSInvalidSessionException
     */
    @WebMethod
    @WebResult(name = "lookupServiceReturn", targetNamespace = "http://services.ws.itim.ibm.com")
    @RequestWrapper(localName = "lookupService", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.LookupService")
    @ResponseWrapper(localName = "lookupServiceResponse", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.LookupServiceResponse")
    public WSService lookupService(
        @WebParam(name = "session", targetNamespace = "http://services.ws.itim.ibm.com")
        WSSession session,
        @WebParam(name = "serviceDN", targetNamespace = "http://services.ws.itim.ibm.com")
        String serviceDN)
        throws WSApplicationException, WSInvalidSessionException
    ;

    /**
     * 
     * @param wsAttrs
     * @param session
     * @param serviceDN
     * @throws WSApplicationException
     * @throws WSLoginServiceException
     */
    @WebMethod
    @RequestWrapper(localName = "modifyService", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.ModifyService")
    @ResponseWrapper(localName = "modifyServiceResponse", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.ModifyServiceResponse")
    public void modifyService(
        @WebParam(name = "session", targetNamespace = "http://services.ws.itim.ibm.com")
        WSSession session,
        @WebParam(name = "serviceDN", targetNamespace = "http://services.ws.itim.ibm.com")
        String serviceDN,
        @WebParam(name = "wsAttrs", targetNamespace = "http://services.ws.itim.ibm.com")
        List<WSAttribute> wsAttrs)
        throws WSApplicationException, WSLoginServiceException
    ;

    /**
     * 
     * @param wscontainer
     * @param session
     * @param filter
     * @return
     *     returns java.util.List<com.ibm.itim.ws.model.WSService>
     * @throws WSApplicationException
     * @throws WSLoginServiceException
     */
    @WebMethod
    @WebResult(name = "searchServicesReturn", targetNamespace = "http://services.ws.itim.ibm.com")
    @RequestWrapper(localName = "searchServices", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.SearchServices")
    @ResponseWrapper(localName = "searchServicesResponse", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.SearchServicesResponse")
    public List<WSService> searchServices(
        @WebParam(name = "session", targetNamespace = "http://services.ws.itim.ibm.com")
        WSSession session,
        @WebParam(name = "wscontainer", targetNamespace = "http://services.ws.itim.ibm.com")
        WSOrganizationalContainer wscontainer,
        @WebParam(name = "filter", targetNamespace = "http://services.ws.itim.ibm.com")
        String filter)
        throws WSApplicationException, WSLoginServiceException
    ;

    /**
     * 
     * @param session
     * @param serviceDN
     * @return
     *     returns int
     * @throws WSApplicationException
     * @throws WSLoginServiceException
     */
    @WebMethod
    @WebResult(name = "testCommunicationsReturn", targetNamespace = "http://services.ws.itim.ibm.com")
    @RequestWrapper(localName = "testCommunications", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.TestCommunications")
    @ResponseWrapper(localName = "testCommunicationsResponse", targetNamespace = "http://services.ws.itim.ibm.com", className = "com.ibm.itim.ws.services.TestCommunicationsResponse")
    public int testCommunications(
        @WebParam(name = "session", targetNamespace = "http://services.ws.itim.ibm.com")
        WSSession session,
        @WebParam(name = "serviceDN", targetNamespace = "http://services.ws.itim.ibm.com")
        String serviceDN)
        throws WSApplicationException, WSLoginServiceException
    ;

}
